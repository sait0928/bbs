name: PHP Composer

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-20.04

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: bbs
        options: --health-cmd "mysqladmin ping -h localhost" --health-interval 20s --health-timeout 10s --health-retries 10

    strategy:
      matrix:
        php-version: [ 7.4 ]

    steps:
      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - uses: actions/checkout@v2

      - name: exec users.sql
        run: |
          mysql -h 127.0.0.1 --port 3306 -u root -proot bbs -e "$(cat $(find ./ -name users.sql))"

      - name: exec posts.sql
        run: |
          mysql -h 127.0.0.1 --port 3306 -u root -proot bbs -e "$(cat $(find ./ -name posts.sql))"

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-v1-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-v1-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run test suite
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: bbs
          MYSQL_HOST: 127.0.0.1
        run: composer run-script test

  psalm:

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        php-version: [ 7.4 ]

    steps:
      - name: Setup PHP ${{ matrix.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-psalm-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-psalm-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Psalm
        uses: docker://vimeo/psalm-github-actions
